{"ast":null,"code":"var _jsxFileName = \"C:\\\\Netflix_clone2\\\\home\\\\ubuntu\\\\Netflix-clone\\\\src\\\\components\\\\ScrollToTop.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './ScrollToTop.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ScrollToTop = () => {\n  _s();\n  const [isVisible, setIsVisible] = useState(false);\n  const [scrollProgress, setScrollProgress] = useState(0);\n  useEffect(() => {\n    const toggleVisibility = () => {\n      const scrolled = document.documentElement.scrollTop;\n      const maxHeight = document.documentElement.scrollHeight - document.documentElement.clientHeight;\n      const progress = scrolled / maxHeight * 100;\n      setScrollProgress(progress);\n      setIsVisible(scrolled > 300);\n    };\n    window.addEventListener('scroll', toggleVisibility);\n    return () => window.removeEventListener('scroll', toggleVisibility);\n  }, []);\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isVisible && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"scroll-to-top\",\n      onClick: scrollToTop,\n      \"aria-label\": \"Scroll to top\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scroll-progress-ring\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"progress-ring\",\n          width: \"50\",\n          height: \"50\",\n          children: /*#__PURE__*/_jsxDEV(\"circle\", {\n            className: \"progress-ring-circle\",\n            stroke: \"#e50914\",\n            strokeWidth: \"3\",\n            fill: \"transparent\",\n            r: \"20\",\n            cx: \"25\",\n            cy: \"25\",\n            style: {\n              strokeDasharray: `${2 * Math.PI * 20}`,\n              strokeDashoffset: `${2 * Math.PI * 20 * (1 - scrollProgress / 100)}`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"scroll-arrow\",\n        viewBox: \"0 0 24 24\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M12 4l-8 8h6v8h4v-8h6z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(ScrollToTop, \"1eRaR7Jt9vgBe3eNJ59qRMq8Iv8=\");\n_c = ScrollToTop;\nexport default ScrollToTop;\nvar _c;\n$RefreshReg$(_c, \"ScrollToTop\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","ScrollToTop","_s","isVisible","setIsVisible","scrollProgress","setScrollProgress","toggleVisibility","scrolled","document","documentElement","scrollTop","maxHeight","scrollHeight","clientHeight","progress","window","addEventListener","removeEventListener","scrollToTop","scrollTo","top","behavior","children","className","onClick","width","height","stroke","strokeWidth","fill","r","cx","cy","style","strokeDasharray","Math","PI","strokeDashoffset","fileName","_jsxFileName","lineNumber","columnNumber","viewBox","d","_c","$RefreshReg$"],"sources":["C:/Netflix_clone2/home/ubuntu/Netflix-clone/src/components/ScrollToTop.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './ScrollToTop.css';\n\nconst ScrollToTop = () => {\n  const [isVisible, setIsVisible] = useState(false);\n  const [scrollProgress, setScrollProgress] = useState(0);\n\n  useEffect(() => {\n    const toggleVisibility = () => {\n      const scrolled = document.documentElement.scrollTop;\n      const maxHeight = document.documentElement.scrollHeight - document.documentElement.clientHeight;\n      const progress = (scrolled / maxHeight) * 100;\n      \n      setScrollProgress(progress);\n      setIsVisible(scrolled > 300);\n    };\n\n    window.addEventListener('scroll', toggleVisibility);\n    return () => window.removeEventListener('scroll', toggleVisibility);\n  }, []);\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n\n  return (\n    <>\n      {isVisible && (\n        <button\n          className=\"scroll-to-top\"\n          onClick={scrollToTop}\n          aria-label=\"Scroll to top\"\n        >\n          <div className=\"scroll-progress-ring\">\n            <svg className=\"progress-ring\" width=\"50\" height=\"50\">\n              <circle\n                className=\"progress-ring-circle\"\n                stroke=\"#e50914\"\n                strokeWidth=\"3\"\n                fill=\"transparent\"\n                r=\"20\"\n                cx=\"25\"\n                cy=\"25\"\n                style={{\n                  strokeDasharray: `${2 * Math.PI * 20}`,\n                  strokeDashoffset: `${2 * Math.PI * 20 * (1 - scrollProgress / 100)}`\n                }}\n              />\n            </svg>\n          </div>\n          <svg className=\"scroll-arrow\" viewBox=\"0 0 24 24\">\n            <path d=\"M12 4l-8 8h6v8h4v-8h6z\"/>\n          </svg>\n        </button>\n      )}\n    </>\n  );\n};\n\nexport default ScrollToTop;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}