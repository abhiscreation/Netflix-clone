{"ast":null,"code":"var _jsxFileName = \"C:\\\\Netflix_clone2\\\\home\\\\ubuntu\\\\Netflix-clone\\\\src\\\\components\\\\GlobalVideo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../signup.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GlobalVideo = ({\n  src,\n  children,\n  playbackRate = 1\n}) => {\n  _s();\n  const videoRef = useRef(null);\n  useEffect(() => {\n    if (videoRef.current) {\n      videoRef.current.playbackRate = playbackRate;\n    }\n  }, [playbackRate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-bg-video-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      loop: true,\n      muted: true,\n      playsInline: true,\n      className: \"signup-bg-video\",\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: src,\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), \"Your browser does not support the video tag.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(GlobalVideo, \"PdMsmLAy5JKU3vCrhAlqGYQfKuA=\");\n_c = GlobalVideo;\nGlobalVideo.propTypes = {\n  src: PropTypes.string.isRequired,\n  children: PropTypes.node,\n  playbackRate: PropTypes.number\n};\nexport default GlobalVideo;\nvar _c;\n$RefreshReg$(_c, \"GlobalVideo\");","map":{"version":3,"names":["React","useRef","useEffect","PropTypes","jsxDEV","_jsxDEV","GlobalVideo","src","children","playbackRate","_s","videoRef","current","className","ref","autoPlay","loop","muted","playsInline","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","string","isRequired","node","number","$RefreshReg$"],"sources":["C:/Netflix_clone2/home/ubuntu/Netflix-clone/src/components/GlobalVideo.jsx"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../signup.css\";\n\nconst GlobalVideo = ({ src, children, playbackRate = 1 }) => {\n  const videoRef = useRef(null);\n\n  useEffect(() => {\n    if (videoRef.current) {\n      videoRef.current.playbackRate = playbackRate;\n    }\n  }, [playbackRate]);\n\n  return (\n    <div className=\"signup-bg-video-wrapper\">\n      <video\n        ref={videoRef}\n        autoPlay\n        loop\n        muted\n        playsInline\n        className=\"signup-bg-video\"\n      >\n        <source src={src} type=\"video/mp4\" />\n        Your browser does not support the video tag.\n      </video>\n      {children}\n    </div>\n  );\n};\n\nGlobalVideo.propTypes = {\n  src: PropTypes.string.isRequired,\n  children: PropTypes.node,\n  playbackRate: PropTypes.number\n};\n\nexport default GlobalVideo;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,WAAW,GAAGA,CAAC;EAAEC,GAAG;EAAEC,QAAQ;EAAEC,YAAY,GAAG;AAAE,CAAC,KAAK;EAAAC,EAAA;EAC3D,MAAMC,QAAQ,GAAGV,MAAM,CAAC,IAAI,CAAC;EAE7BC,SAAS,CAAC,MAAM;IACd,IAAIS,QAAQ,CAACC,OAAO,EAAE;MACpBD,QAAQ,CAACC,OAAO,CAACH,YAAY,GAAGA,YAAY;IAC9C;EACF,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAElB,oBACEJ,OAAA;IAAKQ,SAAS,EAAC,yBAAyB;IAAAL,QAAA,gBACtCH,OAAA;MACES,GAAG,EAAEH,QAAS;MACdI,QAAQ;MACRC,IAAI;MACJC,KAAK;MACLC,WAAW;MACXL,SAAS,EAAC,iBAAiB;MAAAL,QAAA,gBAE3BH,OAAA;QAAQE,GAAG,EAAEA,GAAI;QAACY,IAAI,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gDAEvC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EACPf,QAAQ;EAAA;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACb,EAAA,CAzBIJ,WAAW;AAAAkB,EAAA,GAAXlB,WAAW;AA2BjBA,WAAW,CAACmB,SAAS,GAAG;EACtBlB,GAAG,EAAEJ,SAAS,CAACuB,MAAM,CAACC,UAAU;EAChCnB,QAAQ,EAAEL,SAAS,CAACyB,IAAI;EACxBnB,YAAY,EAAEN,SAAS,CAAC0B;AAC1B,CAAC;AAED,eAAevB,WAAW;AAAC,IAAAkB,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}